摘要
第一部分提出一个白盒、可解释的关于安全保证的数学模型；
第二部分描述一个可以用于测试自动驾驶安全性的系统设计；

RSS：责任敏感的安全
1.介绍
人类驾驶的事故死亡率（每个小时因为事故而死亡的人数）是1/10^6；
自动驾驶为了让人信服需要将这一概率降到1/10^9；
自动驾驶基于能够承担比有司机驾驶更低的代价的假设；
目前的自动驾驶围绕着：1.计算精度 2.高精度地图 3.高精度传感器；
目标是让自动驾驶的代理不会主观造成事故，也就是不作为主要责任承担者，但是可以被动卷入事故中；
例子，RSS将进一步承担责任，在交叉路如果有人闯红灯和自动驾驶的车碰撞，人们通常认为自动驾驶的车应该停下避免事故，这个时候RSS需要将自动驾驶的车停下避免事故的发生；
语义语言要求10^5小时的数据集去得到事故率为每小时1/10^9的RSS模型；
形式化的模型包括了自动驾驶的所有重要部分：感知、决策、动作；
论文主要集中在感知和决策方面，动作更多是依赖控制理论；
第二部分主要是讨论现有的决策方法存在的问题，称为多主体（决策依赖的主体是多个的，包括人和机器等）安全性问题；
第三部分提出RSS这一数学模型来提供决策100%不会犯错的保证；
第四部分使用可计算的方法来验证这个模型；
第六部分会证明用一个综合的方法来减少验证感知系统的数据；
剩下的部分讨论可扩展性；
第五部分描述驾驶策略；

2 多主体安全性
2.1 完全安全是不可能的，例子，车被4辆车夹着没办法做任何决策来规避潜在的危险；
2.2 统计方法的缺陷
首先，统计方法的验证时不可能的；
其次，统计方法的事故率保证不能准确评估，必须要下降多个数量级；
想要达到1/10^9的每小时事故率，必须要有10^9小时的数据量，而且每一次的变化需要重新进行这样数量级的训练验证，这样的理论导致验证某一决策方法是不可能实现的；

3 多主体安全性的RSS模型
RSS的最重要假设就是一辆自动驾驶的车只会卷入一个事故中而不会造成一个事故；
RSS的四条基本规则就是：
a.自己和前面的车辆保持一定距离，即使前面的车突然停下自己也能够及时安全地停车；
b.自己和旁边的车保持距离，将要改变线路的时候使得旁边的车有足够的反应空间；
c.遵守优先通行权规则；
d.在拥塞路段保持谨慎；
3.1 安全距离
一个基本理念：如果有人从后面撞过来不是我的错（感觉不完全对）；
定义一：相同方向下的安全距离和反应时间p，前面车辆的制动加速度a12，后面车辆在反应时间里的行驶加速度a21，后面车辆的最小制动加速度a22有关。（这个定义的优点是考虑了前面车的最大制动加速度和后面车的最小制动加速度来保持一个更大的安全距离）
注意：
a.定义中的每个参数必须有相关的规则来准确提供；
b.机器和人的反应时间，最小加速度（踩下刹车的时间和力度）不一样，机器的反应时间小，最小加速度要大一点，所以可以比较快地降速；
c.在不同的路段参数也要不同，比如湿的路段，下雪路段；（这个时候的制动加速度是很难获取的，必须有事先的测量作为一个基本参照，但是又不完全准确，存在测量误差，这个如果人来驾驶的话很大程度要靠经验来小心翼翼地保持距离）
然后根据两辆车的行驶速度和这几个参数得到安全距离，这个安全距离很好求得，基本就是运动学问题。（证明没有问题，问题在与参数的获取，和一些意外情况的处理，比如不是完全直线行驶）
定义二：在同一条直线行驶而且是相对行驶的时候，安全距离和反应时间p，反应时间内两车的行驶加速度a1，反应时间后的制动加速度a2有关，计算方程也是遵循运动学原理，得到这个安全距离的目的是能够及时的警告车辆是否进入了非安全距离的区域。
定义三：安全距离推理出危险区域和受责时间，在这个出去危险区域的时间里发生事故是自动驾驶的责任。
定义四：关于危险纵向区域的正确反应：
a.同向行驶：
	1)后面车辆反应时间内不能再继续增加加速度，反应之后不能降低制动加速度，意思就是要	尽快停下来，停车之后允许非正向的加速度，就是不能再向前开，避免撞到前面的车；
	2)前面车辆至少用-max(a)的制动加速度，也就是不能降速地太快导致后面的人来不及刹车（	说实话这个虽然符合常理，但是难以控制和实现检测，只能作为时候的责任归属调差来使用	，这里可能是为了初始化的时候让机器统一做这样的规则束缚来降低事故率），停下来之后	不能再向后退，避免撞到后面的车；
b.相对行驶：
	1)正向的车在反应时间内不能超过最大加速度加速行驶，反应时间后不能低于最小加速度制	度，停车之后不能再往前开；
	2)反向的车这个时候需要做的和正向的车一样；
定义五：如果任何一辆车在受责时间内没有遵循定义四的正确反应，那就要为这次事故负全责，并且如果两辆车都没有遵守这个规则就共同负责；

3.2 侧向行驶责任
首先介绍多路线的路线更换的情况，比如高速公路，然后介绍汇入路线，交叉路线，环状路线等场景，在下一个小节介绍非结构化的路线场景。
定义六：声明横向速度的计算方法，(l1-l)/(t1-t),l指的是横向移动的距离；
定义七：类似定义二得到相对行驶时候的横向的安全距离，后面会有有关于非相对靠近，就是一辆车有意靠近另一辆车的情况，计算方法几乎一样；
定义八：类似定义三得到微信区域和受责时间，这里需要在纵向和横向都处于非安全距离里面才能认为这是受责时间，理论上只会在受责时间内发生事故；
定义九：类似定义四得到在危险情景下的反应：
a.在受责时间前处于纵向安全距离时，纵向速度受定义四的约束；
b.在受责时间前处于横向安全距离时：
	1)反应时间内两辆车的横向加速度不能大于最大横向加速度，就是不能突然横向冲过去；
	2)反应时间后两辆车在达到0横向速度前必须采用不低于最小横向制度速度的加速度减速；
	3)两辆车达到0横向速度之后不能再有相互靠近的横向加速度，就是不能再相互靠近了；
c.关于同相横向靠近的情况补充
	1)类似定义四a1；
	2)类似定义四a2；
定义十：类似定义五，任何一辆车在受责时间内没有遵循定义九的要求反应就要负全责；
	注意点2：横向加速度a1和制动加速度a2需要道路使用者遵循，否则就是要为事故负责；
	注意点3：为了简单，我们认为横向速度降到0是瞬间的事情，在后面会验证对RSS没影响；
	注意点4：这个定义可以为任意形状的车辆应用，包括拖车和打开门的车；
3.3 多种几何形状道路和优先通行权规则
首先提出一个矛盾点，当C1在优先行驶的路段驾驶的时候C2即将汇入相同路段，即使对于C2有停止提示的标志，但是C1还是会因为要保持安全区域而不得不减速，因此我们需要重新归纳前几节关于什么
C1在C2前面和非安全距离的定义来规避这个问题。
	注意点5：在这之后的定义是基于多条路段的情况，在单一路段的情况还是遵循原来的定义；
定义十一：两条不同形状的路径的横向安全距离
定义十二：两条不同形状的路径的纵向行驶顺序，我们这样定义一辆车C1在C2的前面：
	1)如果在同一个路径里面，按照单一路径的定义来确定C1在C2的前面；
	2)如果在两条不同路径里面，哪辆车离会入口远就处于前面（这里好像是定义错误）；
	注意点6：这个行驶顺序在纵向安全距离是十分明显的，在非安全距离是模糊的；
定义十三：两条不同路径的纵向安全距离
定义十四：不同路径下的危险区域和受责时间，正确反应，责任归属 类似定义十
	注意点7：有时候当面对的车有多条路径选择的时候，RSS会考虑所有的情况；
3.3.1 交通灯
一种情况是交叉路口，红灯路上的车辆闯入了十字路口，绿灯路上的车辆需要制动来和它保持距离来避免事故的发生。
3.3.2 非结构化的道路
定义十五：轨迹函数τ和完全停止的时间Ts；
定义十六：轨迹里的事故，τ1和τ2的交集为空就不会有事故；
定义十七：根据制动和正常驾驶得到的轨迹；
定义十八：安全距离，危险情景，受责时间，正确反应，责任归属；
	1)两辆车的制动轨迹和正常前行轨迹交集为空；
	2)两辆车的制动轨迹交集为空；
	处于非安全距离的时间就是受责时间，正确反应如下：
	1)两辆车完全停下后，一辆车可以行驶远离另一辆车；
	2)两辆车已经没有处于受责时间内的时候按照1)的规则；
	3)其他情况只能制动；
	没有遵循正确反应规则的车辆负全责；
3.4 行人
正常停在路中间，保持安全距离；
在红灯的时候进入斑马线，即使车行路时绿灯也要制动；
行人跑动就用轨迹去模拟；
3.5 阻塞时候的细节
定义十九：不能超过两倍的最大路段行驶速度；
定义二十：责任归属于没有在限定速度内行驶的车；
3.5.1 行人阻塞在居民区
定义二十一：自动驾驶车辆不为以下两种情况负责：
	1)反应时间内没有加速，反应后以最小制动加速度以上的加速度制动；
	2)反应时间到事故发生时间内的车辆平均速度小于行人平均速度；
证明没看懂
3.6 完全安全的乌托邦
4 RSS
4.1 可计算的可行安全验证
理论一：
1)决策可以在p秒内执行；
2)决策里纵向加速度不超过max，制动加速度不超过max，行驶速度不超过限速；
3)决策里横向加速度不超过max，非结构化路段不会转向加速度超过max；
4)路段使用者处于危险情景要按照定义九或者定义十四来正确反应；
归纳法证明
起始，初始状态不是危险情景或者完全停止；
如果，下一步依旧是非危险情景那我们依旧是成立的；
如果，下一步是受责时间Tb，由于St是非危险的（这里感觉有问题），根据策略我们正确反应，那么这种情形下要么不会有事故，即使出了事故也不是我们的责任；
最后，即使多辆车都在危险时间里，策略也是满足（横向和纵向都制动）；
这样理论证明完成；
4.2 可用性
5 驾驶策略
驾驶策略是感知状态对驾驶命令的映射；
上面章节介绍的是事故极端情况下的策略，我们现在构造正常行驶下的决策规则；
这个章节讨论的时候都默认不存在测量误差，所有感知状态都是准确的，后面再讨论测量误差；
Q-learning 贝尔曼方程（基于马尔科夫决策）；
离散化状态S，动作A，决策Q，如果S有6个状态，每个状态有10个值，有k辆车，那也有10^(6k)种可能状态作为决策的输入，为每一个状态做一个决策是不可能的，解决的方法：
1)手动决定特征值，用线性方程求解；
2)利用深度神经网络；缺点：不确定分类是否正确，不确定是否有算法去把它高效地学习出来，没有很多例子可以证明复杂的多主体的问题可以将Q决策学习出来；
每一个决策都是由一个系列的（状态，动作）的系列归纳出来的；
每一个动作都有它的奖励值，我们不能通过短暂的奖励值来决策，因为可能存在较长时间后这个决策会导致十分严重的事故，我们需要统计长期的奖励值来进行决策，问题就转换为找到这个Q函数，这个Q函数必须可以反应长期的决策质量；
这个Q函数的寻找比马尔科夫决策更强，因为它是针对多个主体的，而马尔科夫决策只是根据上一个状态和动作来决定下一个状态；
Q函数的定义：在St状态下，它的未来T步的决策系列得到未来相应的状态系列和奖励系列，从这些奖励值总值里面找到一条奖励总值最大的路径就是Q函数的功能；
如何计算Q函数：
方法一：
1)离散化动作集，如果有10个可能的横向加速度和10个纵向的加速度就有100中可能的决策维数；
2)这里有启发地进行搜索动作，由粗到细，这种蛮力的搜索需要大量的计算；
3)未来步数T是一个可折中的计划时间域，T越大决策越好但是计算量越大；
4)这个方法的意思就是预测所有的未来轨迹然后选一个最好的；
方法二：
1)离散化动作集和状态集，用近似的Q去实现，用贝尔曼方程；
2)消耗时间是T*|A|*|S|的倍数；
3)主要问题在于S的离散集是非常大的，如果S有6个状态，每个状态有10个值，有k辆车，那也有10^(6k)种可能；
4)解决组合可能性过多的方法：假设类 类似颜色 形状 重量这些类可以将他们分别放进各自的假设类里，再用线性函数或者神经网络去求解；这种方法的缺点是特征类不一定足够好，不确定是否存在算法去学习，尤其是针对多主体的Q函数比较少见，这也是本论文提出的难点；更为严重的是，在时间频率内的信噪比很低，假如两个动作的将奖励值非常接近但是只有一个是正确的时候需要很高的信噪比，意思就是我们需要看到更加未来的状态才能得出最正确的决策；
总体来说，解决方法一般分为两种：一种是蛮力的，将所有的动作序列存在表里，离散化状态，但是资源就不能够释放，计算和内存消耗都很大；另一种是用较短动作序列，采用近似的Q函数决策；论文采用的是动作语义空间；

一般情况下，离散时间最佳化问题的动态规划用贝尔方程；连续时间最佳化问题用汉密尔顿-雅可比-贝尔曼方程；

5.1 语义驾驶
不是说利用具体数字的驾驶，单纯用“向前开”，“跟着前面的车”这种类型句子的驾驶决策；
语义动作可以有很长的时间域，就是可以不需要再为未来很多步的动作做决策，这样的语义动作是很少的，因此我们又可以利用很少的资源去得到比较准确的Q函数；
定义语义空间：主要思想是定义横向和纵向的目标；
横向目标是在路线什么位置上行驶，比如我要在2号线的中心行驶；
纵向目标有三种：
	1)位置和其他车的速度，比如和3号车一样的速度在2s的距离跟着它；
	2)速度目标，比如用该路段限速的110%的速度行驶；
	3)特定位置的特定速度行驶，比如通过人行密集地方的时候保持速度为60fkm/k；
横向目标的定义域：4条线路，4个位置，就一共4*4=16种；
纵向目标的定义域：8辆车，前后2种情况，3个距离，就一共8*2*3=48种；
速度目标10种；
上限速度目标2种；
总的动作空间在近似10^4；
注意：语义决策频率大致为每0.1秒，但是获取这个决策的语义动作是要考虑未来多个语义动作的预测轨迹，也就是可能用未来10秒的时间来做当前的决策；

5.2 构建一个语义动作的评估函数
类似强化学习的方法得到Q函数；
5.3 其他主体的动态

6 感知
定义二十二：感知系统存在错误的情况：
1)错过一个目标；
2)捕捉到一个假目标；
3)对位置和速度估计存在误差；
4)物体语义分析错误，比如红绿灯判断错误；
6.1 方法
定义二十三：PAC感知系统；
目的是让原始感知器得到的数据在一定精度和概率上满足我们的要求；
我们在估计一个自动驾驶的精度的时候可以参考决策之后的预测轨迹和实际轨迹的误差；
定义二十四：感知单元；
定义二十五：感知单元的错误；
定义二十六：语义的利普西茨Q；
6.2 安全
事故起因：硬件错误，软件错误，感知错误
感知失误：危险没发现导致事故；或者不是危险当作危险急刹车导致后面的人撞上来的事故；
定义二十七：证明多个子系统的安全性达到要求后可以让总系统的安全性也达到要求；
6.3建造可扩展的感知系统
使用相机的好处：高分辨率，质量好，价成本低；
使用相机的缺点：2D的信息，纵向距离测量困难，对环境因素敏感；
雷达产生高精度地图；
